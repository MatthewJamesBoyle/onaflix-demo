services:
  postgres:
    name: "PostgreSQL Database"
    description: "PostgreSQL database for Gitpod Flix"
    triggeredBy:
      - postDevcontainerStart
      - postEnvironmentStart
    commands:
      start: |
        # Force cleanup of any existing PostgreSQL containers
        echo "Cleaning up any existing PostgreSQL containers..."
        docker rm -f postgres 2>/dev/null || true
        sleep 2  # Give Docker time to clean up

        echo "Starting PostgreSQL with Docker..."
        docker run --rm -d \
          --name postgres \
          -e POSTGRES_USER=gitpod \
          -e POSTGRES_PASSWORD=gitpod \
          -e POSTGRES_DB=gitpodflix \
          -p 5432:5432 \
          -v postgres_data:/var/lib/postgresql/data \
          -v /workspaces/flex-demo/database/main/migrations:/docker-entrypoint-initdb.d \
          postgres:15

        # Keep the service running by monitoring the container
        while true; do
          if ! docker ps | grep -q postgres; then
            echo "PostgreSQL container stopped unexpectedly"
            exit 1
          fi
          sleep 5
        done

      ready: |
        if docker exec postgres pg_isready -U gitpod; then
          echo "PostgreSQL is ready and accepting connections"
          exit 0
        else
          echo "PostgreSQL not ready"
          exit 1
        fi

      stop: |
        echo "Stopping PostgreSQL container..."
        docker stop postgres || true
        echo "Removing PostgreSQL container..."
        docker rm -f postgres || true

  catalog:
    name: "Catalog Service"
    description: "Movie catalog API service"
    triggeredBy:
      - postDevcontainerStart
      - postEnvironmentStart
    commands:
      start: |
        cd /workspaces/flex-demo/backend/catalog
        PORT=3002 npx nodemon src/index.ts
      ready: |
        if curl -s http://localhost:3002/health > /dev/null; then
          echo "Catalog service is ready"
          exit 0
        else
          echo "Catalog service not ready"
          exit 1
        fi
      stop: |
        pkill -f "node.*catalog" || true

  management-ui:
    name: "Management UI"
    description: "Development environment visualization dashboard"
    triggeredBy:
      - postDevcontainerStart
      - postEnvironmentStart
    commands:
      start: |
        cd /workspaces/flex-demo/management-ui
        PORT=3001 npm run dev
      ready: |
        if curl -s http://localhost:3001 > /dev/null; then
          echo "Management UI is ready"
          exit 0
        else
          echo "Management UI not ready"
          exit 1
        fi
      stop: |
        pkill -f "node.*management-ui" || true

  gitpod-flix:
    name: "Gitpod Flix"
    description: "Streaming platform frontend"
    triggeredBy:
      - postDevcontainerStart
      - postEnvironmentStart
    commands:
      start: |
        cd /workspaces/flex-demo/frontend
        PORT=3000 npm run dev
      ready: |
        if curl -s http://localhost:3000 > /dev/null; then
          echo "Gitpod Flix is ready"
          exit 0
        else
          echo "Gitpod Flix not ready"
          exit 1
        fi
      stop: |
        pkill -f "node.*frontend" || true

tasks:
  seedDatabase:
    name: "Seed Database"
    description: "Seed the database with sample movies in a dramatic sequence"
    triggeredBy:
      - manual
    command: |
      cd /workspaces/flex-demo/database/main
      echo "Clearing existing data..."
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -c "TRUNCATE TABLE movies;"

      echo "Seeding trending movies..."
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -f seeds/01_seed_trending.sql
      sleep 4

      echo "Seeding popular movies..."
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -f seeds/02_seed_popular.sql
      sleep 4

      echo "Seeding classic movies..."
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -f seeds/03_seed_classics.sql
      sleep 4

      echo "Seeding sci-fi movies..."
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -f seeds/04_seed_scifi.sql
      echo "Database seeding complete!"

  clearDatabase:
    name: "Clear Database"
    description: "Clear all data from the database"
    triggeredBy:
      - manual
    command: |
      cd /workspaces/flex-demo/database/main
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -c "TRUNCATE TABLE movies;"

  # runTests:
  #   name: "Run Tests"
  #   description: "Run all test suites"
  #   triggeredBy:
  #     - manual
  #   command: |
  #     echo "Running management UI tests..."
  #     cd /workspaces/flex-demo/management-ui && npm test
  #     echo "Running Gitpod Flix tests..."
  #     cd /workspaces/flex-demo/frontend && npm test
  #     echo "Running catalog service tests..."
  #     cd /workspaces/flex-demo/backend/catalog && npm test

  # lint:
  #   name: "Run Linters"
  #   description: "Run all linters"
  #   triggeredBy:
  #     - manual
  #   command: |
  #     echo "Linting frontend..."
  #     cd /workspaces/flex-demo/frontend && npm run lint
  #     echo "Linting backend..."
  #     cd /workspaces/flex-demo/services/backend && npm run lint
  #     echo "Linting database service..."
  #     cd /workspaces/flex-demo/services/database && npm run lint

  # build:
  #   name: "Build All"
  #   description: "Build all services"
  #   triggeredBy:
  #     - manual
  #   command: |
  #     echo "Building frontend..."
  #     cd /workspaces/flex-demo/frontend && npm run build
  #     echo "Building backend..."
  #     cd /workspaces/flex-demo/services/backend && npm run build
  #     echo "Building database service..."
  #     cd /workspaces/flex-demo/services/database && npm run build
