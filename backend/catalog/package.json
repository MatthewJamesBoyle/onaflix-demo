{
  "name": "catalog-service",
  "version": "1.0.0",
  "description": "Catalog service for Gitpod Flix",
  "main": "src/index.ts",
  "scripts": {
    "start": "ts-node src/index.ts",
    "dev": "nodemon --exec ts-node src/index.ts",
    "build": "tsc",
    "test": "jest",
    "setup": "./scripts/setup.sh",
    "renovate": "if [ \"$npm_config_live\" ]; then DRY_RUN_FLAG=\"\"; echo 'LIVE MODE: Will create actual pull requests'; else DRY_RUN_FLAG=\"--dry-run=full\"; echo 'DRY RUN MODE: No pull requests will be created (use --live to create PRs)'; fi && RENOVATE_TOKEN=$GH_CLI_TOKEN LOG_LEVEL=debug renovate --platform=github $DRY_RUN_FLAG gitpod-samples/gitpodflix-demo > renovate_debug.txt 2>&1 && echo 'Renovate scan complete! Check renovate_debug.txt for full output' && if [ \"$npm_config_filter\" ]; then echo 'Filtering results for:' $npm_config_filter && grep -i -A 20 -B 5 \"$npm_config_filter\" renovate_debug.txt; else echo 'Use --filter=<package> to filter results for specific dependency'; fi",
    "renovate:jest": "echo 'Creating Jest v30 pull request (LIVE MODE)...' && RENOVATE_TOKEN=$GH_CLI_TOKEN renovate --platform=github --package-rules='[{\"matchPackageNames\":[\"jest\",\"@types/jest\"],\"enabled\":true},{\"matchPackageNames\":[\"*\"],\"excludePackageNames\":[\"jest\",\"@types/jest\"],\"enabled\":false}]' gitpod-samples/gitpodflix-demo"
  },
  "dependencies": {
    "express": "^4.18.2",
    "pg": "^8.11.3",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/node": "^20.10.5",
    "@types/pg": "^8.10.9",
    "@types/cors": "^2.8.17",
    "typescript": "^5.3.3",
    "ts-node": "^10.9.2",
    "nodemon": "^3.0.2",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.11",
        "ts-jest": "^29.1.1"
  },
  "nodemonConfig": {
    "watch": ["src"],
    "ext": "ts,json",
    "exec": "ts-node src/index.ts"
  }
}
